<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>weekend-read on Thejazeto Lhousa</title><link>/tags/weekend-read/</link><description>Recent content in weekend-read on Thejazeto Lhousa</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â©thejazeto</copyright><lastBuildDate>Sat, 25 Sep 2021 01:48:04 +0530</lastBuildDate><atom:link href="/tags/weekend-read/index.xml" rel="self" type="application/rss+xml"/><item><title>Weekend Read 1</title><link>/posts/weekend-read-1/</link><pubDate>Sat, 25 Sep 2021 01:48:04 +0530</pubDate><guid>/posts/weekend-read-1/</guid><description>Articles Thread pools in JVM CPU bound, Blocking and Non-blocking CPU bound should have threads at max equal to no of CPU Blocking IO operations should never be allowed on the CPU bound pool They need to go to separate pool Async IO polls (non blocking) should be handled by very small number of fixed, pre-allocated threads These just sit idle asking kernel continually if any new async IO notification is available then forward to rest of application Never do any work on this thread pool.</description></item></channel></rss>